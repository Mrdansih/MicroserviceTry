services:

# Gateway stuff

  gateway:
    build: ./Gateway
    environment:
      - ASPNETCORE_URLS=http://+:5000
    ports:
      - "8080:5000"

# Microservice stuff

  authservice:
      build:
        context: ./AuthMicroservice
        dockerfile: DockerfileAuth
      deploy:
        replicas: 2
      environment:
        - ASPNETCORE_URLS=http://+:5001
        - ConnectionStrings__Default=server=usersdb;port=3306;user=root;password=root;database=usersdb
      depends_on:
        - usersdb
    
  productservice:
      build:
        context: ./ProductMicroservice
        dockerfile: DockerfileProduct
      deploy:
        replicas: 2
      environment:
        - ASPNETCORE_URLS=http://+:5002
        - ConnectionStrings__Default=server=usersdb;port=3306;user=root;password=root;database=usersdb
      depends_on:
        - usersdb
  
  orderservice:
       build:
         context: ./OrderMicroservice
         dockerfile: DockerfileOrder
       deploy:
           replicas: 1
       environment:
         - ASPNETCORE_URLS=http://+:5003
         - ConnectionStrings__Default=server=usersdb;port=3306;user=root;password=root;database=usersdb
       depends_on:
         - usersdb
  
# Database stuff

  usersdb:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: usersdb
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

# Kafka stuff

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1